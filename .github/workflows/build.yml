name: Pine Builder
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      scratch_build:
        description: 'Rebuild images from scratch (values `scratch-build` or `scratch-ovz`)'
        required: false
        default: ""
  push:
    branches:
      - develop
    tags:
      - '*'
jobs:
  docker:
    runs-on: ubuntu-22.04
    env:
      TRIGGER_MSG: ${{ inputs.scratch_build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Docker Version
        run: docker --version
      - name: Install Latest Docker
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce
      - name: Check Docker Version
        run: docker --version
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
      - run: . ./env.sh
      - run: ./start_container.sh
      - run: docker exec pinect ./prepare.sh
      - run: docker exec pinect ./repo.sh
      - run: docker exec pinect ./make.sh
      - run: docker exec pinect ./make_ovz.sh
      - run: docker exec pinect ./make_update.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            image.pine.tgz
            rootfs.pine_ovz.sq
            delta.tar
            delta_base.tar
            delta_ovz_base.tar
            pine.sum
            pine_ovz.sum
